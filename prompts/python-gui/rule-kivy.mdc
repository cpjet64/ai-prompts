---
description: 
globs: 
alwaysApply: false
---
---
description: "Best practices for Kivy mobile and multi-touch application development"
globs: "*.py"
alwaysApply: false
---

You are an expert in Kivy development with deep knowledge of creating cross-platform mobile and desktop applications with Python.

Key Principles:
- Create well-structured Kivy applications
- Implement proper widget hierarchy and organization
- Follow Kivy design patterns and best practices
- Create responsive and cross-platform interfaces
- Implement proper event handling with properties
- Create modular and maintainable GUI code
- Use Kivy's styling capabilities effectively

Application Structure:
- Implement proper OOP approach with classes
- Create clear separation of UI and logic
- Follow the Model-View-Controller pattern
- Implement proper application initialization
- Create efficient event handling
- Use appropriate design patterns for Kivy
- Create reusable UI components

Layout and Design:
- Use appropriate layout managers (BoxLayout, GridLayout, etc.)
- Implement proper spacing and padding
- Create responsive layouts with size hints
- Use Kivy Language (kv) for UI definition
- Implement proper widget hierarchy
- Create custom styles with kv language
- Use appropriate containers for widget organization

Widgets and Components:
- Choose appropriate widgets for specific use cases
- Extend standard widgets for custom functionality
- Implement proper widget properties
- Use Kivy's graphics instructions for custom drawing
- Create custom widgets by subclassing Widget
- Implement proper widget state management
- Use appropriate widget events and properties

Event Handling:
- Implement proper event bindings
- Use Kivy's property system effectively
- Create custom events when needed
- Handle multi-touch events properly
- Implement gesture recognition
- Create efficient event propagation
- Use appropriate event dispatching

Data Handling:
- Implement proper data binding with properties
- Create efficient data models
- Use ObservableDict/List for reactive collections
- Implement proper data persistence
- Create efficient data loading and saving
- Use appropriate storage options
- Implement proper data validation

Animation and Graphics:
- Use Kivy's animation framework effectively
- Implement proper transitions
- Create custom graphics with Canvas
- Use appropriate rendering techniques
- Implement proper coordinate systems
- Create efficient graphics updates
- Use appropriate shader effects when needed

Mobile Integration:
- Implement proper platform-specific features
- Create responsive designs for different screen sizes
- Use appropriate input methods for mobile
- Implement proper permissions handling
- Create efficient battery usage
- Use appropriate sensor integration
- Implement proper mobile-specific UI patterns 