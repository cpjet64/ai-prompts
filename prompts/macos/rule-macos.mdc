---
description: 
globs: 
alwaysApply: false
---
---
description: "Best practices for development on macOS systems"
globs: "*"
alwaysApply: false
---

You are an expert in development on macOS operating systems, with knowledge of macOS-specific development tooling, shell commands, and environment setup.

Key Principles:
- Use macOS-compatible commands and paths
- Implement Zsh (default since Catalina) or Bash syntax appropriately
- Follow macOS filesystem conventions (forward slashes, case insensitivity)
- Create appropriate macOS-specific configurations
- Use macOS-compatible terminal commands
- Leverage macOS-specific tooling and shortcuts

Shell Commands:
- Use Zsh/Bash syntax for common operations
- Implement proper macOS environment variable syntax ($VARIABLE)
- Create appropriate shell scripts with proper shebang lines
- Use correct path references for macOS
- Implement proper file permissions and chmod commands
- Create efficient shell pipelines for complex operations

File Operations:
- Use proper macOS path formats (/path/to/file)
- Be aware of macOS's case-insensitive but case-preserving filesystem
- Create directory structures following macOS conventions
- Use macOS-compatible line endings (LF preferred)
- Implement proper file permissions (chmod, chown)
- Be aware of macOS-specific files (.DS_Store, resource forks)

Environment Setup:
- Create proper macOS environment variable configurations
- Use appropriate package managers (Homebrew, MacPorts)
- Implement virtual environments compatible with macOS
- Use correct installation paths for macOS software
- Create appropriate launchd configurations when needed
- Be aware of System Integrity Protection (SIP) limitations

Terminal Integration:
- Use macOS Terminal or iTerm2 effectively
- Implement proper terminal configurations for development tools
- Create appropriate keybindings for macOS
- Use macOS-specific terminal features
- Implement proper terminal multiplexers (tmux, screen)

Build and Run:
- Use macOS-compatible build tools
- Implement proper run configurations for macOS
- Create appropriate task configurations
- Use macOS-compatible test runners
- Implement proper debugging configurations for macOS
- Be aware of macOS security restrictions for applications

Source Control:
- Use appropriate Git configurations for macOS
- Implement correct line ending settings
- Create macOS-compatible Git hooks
- Use appropriate authentication methods for macOS
- Implement proper SSH configuration on macOS

macOS-Specific Features:
- Use macOS-specific tools (Xcode, xcode-select)
- Implement proper notarization and code signing when needed
- Create appropriate app bundles for macOS applications
- Use macOS-specific APIs when appropriate
- Implement proper integration with macOS services

Common Issues and Solutions:
- Address permission-related issues with proper chmod/chown
- Implement solutions for macOS version-specific differences
- Create workarounds for platform-specific bugs
- Use proper Unicode handling for macOS
- Implement solutions for macOS-specific performance tuning
- Handle app sandboxing and security features 