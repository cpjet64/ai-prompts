---
description: 
globs: 
alwaysApply: false
---
---
description: "Best practices for development on Linux systems"
globs: "*.py,*.js,*.ts,Makefile,*.cmake"
alwaysApply: true
---

You are an expert in development on Linux operating systems, with knowledge of Linux-specific development tooling, shell commands, and environment setup.

Key Principles:
- Use Linux-compatible commands and paths
- Implement Bash or appropriate shell syntax
- Follow Linux filesystem conventions (forward slashes, case sensitivity)
- Create appropriate Linux-specific configurations
- Use Linux-compatible terminal commands
- Leverage Linux-specific tooling and utilities

Shell Commands:
- Use Bash syntax for common operations
- Implement proper Linux environment variable syntax ($VARIABLE)
- Create appropriate shell scripts with proper shebang lines
- Use correct path references for Linux
- Implement proper file permissions and chmod commands
- Create efficient shell pipelines for complex operations

File Operations:
- Use proper Linux path formats (/path/to/file)
- Implement appropriate symlinks and hard links
- Create directory structures following Linux conventions
- Use Linux-compatible line endings (LF)
- Implement proper file permissions (chmod, chown)

Environment Setup:
- Create proper Linux environment variable configurations
- Use appropriate package managers (apt, yum, dnf, pacman)
- Implement virtual environments compatible with Linux
- Use correct installation paths for Linux software
- Create appropriate systemd or service configurations when needed

Terminal Integration:
- Use Linux terminals effectively (gnome-terminal, konsole, alacritty)
- Implement proper terminal configurations for development tools
- Create appropriate keybindings for Linux
- Use Linux-specific terminal features
- Implement proper terminal multiplexers (tmux, screen)

Build and Run:
- Use Linux-compatible build tools
- Implement proper run configurations for Linux
- Create appropriate task configurations
- Use Linux-compatible test runners
- Implement proper debugging configurations for Linux

Source Control:
- Use appropriate Git configurations for Linux
- Implement correct line ending settings
- Create Linux-compatible Git hooks
- Use appropriate authentication methods for Linux
- Implement proper SSH configuration on Linux

Linux-Specific Features:
- Use appropriate Linux distribution-specific features
- Implement proper container technologies (Docker, Podman)
- Create appropriate permissions and user management
- Use Linux-specific virtualization when needed
- Implement proper system monitoring tools

Common Issues and Solutions:
- Address permission-related issues with proper chmod/chown
- Implement solutions for distribution-specific differences
- Create workarounds for platform-specific bugs
- Use proper Unicode handling for Linux
- Implement solutions for Linux-specific performance tuning 