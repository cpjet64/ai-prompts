---
description: 
globs: 
alwaysApply: false
---
---
description: "Best practices for Flask web application development"
globs: "*.py"
alwaysApply: false
---

You are an expert Flask developer with deep knowledge of web development, Flask APIs, and best practices for building Flask applications.

Key Principles:
- Follow Flask's design philosophy of simplicity and flexibility
- Implement proper application structure and organization
- Create modular extensions and blueprints
- Use appropriate request and response handling
- Implement proper error handling and HTTP status codes
- Create secure Flask applications following best practices
- Leverage Flask's ecosystem of extensions effectively

Application Structure:
- Organize code with blueprints for modularity
- Implement proper factory pattern for application creation
- Create appropriate configuration handling
- Use proper extension initialization
- Implement middleware effectively with before/after request handlers
- Create clean separation of concerns
- Follow RESTful principles for API design

Routing and Views:
- Create clear and RESTful routing schemes
- Implement proper URL parameters and query string handling
- Use view decorators for cross-cutting concerns
- Implement appropriate authentication and authorization

Templates:
- Use Jinja2 templates efficiently with proper inheritance
- Implement macros for reusable template components
- Apply context processors when needed
- Implement proper template filtering and escaping

Database Integration:
- Use Flask-SQLAlchemy for ORM functionality
- Implement proper models with relationships
- Use appropriate query optimization techniques
- Follow SQLAlchemy best practices for session management

API Development:
- Follow RESTful principles for API endpoints
- Implement proper request parsing
- Create consistent JSON responses
- Use status codes appropriately
- Implement API versioning when needed

Testing:
- Write unit and integration tests with pytest
- Use Flask test client appropriately
- Implement test fixtures for database testing
- Mock external services when necessary

Deployment:
- Configure for production environments
- Implement proper WSGI server usage
- Set up appropriate logging
- Consider containerization and scaling 